// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Availability {
  id      String   @id @default(cuid())
  startAt DateTime
  endAt   DateTime
}

model Course {
  id       String    @id @default(cuid())
  teachers Teacher[]
  name     String
  duration Int
  bookings Booking[]
}

model Client {
  id       String    @id @default(cuid())
  email    String    @unique
  bookings Booking[]
}

model Booking {
  id       String   @id @default(cuid())
  client   Client   @relation(fields: [clientId], references: [id])
  course   Course   @relation(fields: [courseId], references: [id])
  date     DateTime
  clientId String
  courseId String

  @@unique([clientId, courseId])
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  teacherId         String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  teacher           Teacher @relation(fields: [teacherId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  teacherId    String
  expires      DateTime
  teacher      Teacher  @relation(fields: [teacherId], references: [id], onDelete: Cascade)
}

model Teacher {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  password      String
  courses       Course[]
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
