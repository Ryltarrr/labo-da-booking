import { Box, Button, Group, TextInput } from "@mantine/core";
import { useForm } from "@mantine/form";
import { type NextPage } from "next";
import Head from "next/head";
import { z } from "zod";
import { trpc } from "../../utils/trpc";

const Invite: NextPage = () => {
  const { data, refetch } = trpc.teacher.getAll.useQuery();
  const createTeacher = trpc.teacher.create.useMutation({
    onSuccess() {
      refetch();
    },
  });
  const form = useForm({
    initialValues: {
      email: "",
      password: "",
      passwordConfirm: "",
      name: "",
    },

    validate: {
      name: (value) => {
        const val = z.string().min(1).safeParse(value);
        if (!val.success) {
          return "Le nom est obligatoire";
        }
        return null;
      },
      email: (value) => {
        const val = z.string().email().endsWith("@ynov.com").safeParse(value);

        if (!val.success) {
          return "Email invalide (est-ce bien une adresse ynov ?)";
        }
        return null;
      },
      password: (value, form) => {
        if (value.length < 6) {
          return "Le mot de passe doit faire au minimum 6 caractères";
        }
        return value === form.passwordConfirm ? null : true;
      },
      passwordConfirm: (value, form) => {
        if (!value) {
          return true;
        }
        return value === form.password
          ? null
          : "Les mots de passes doivent être identiques";
      },
    },
  });

  const handleCreate = async () => {
    createTeacher.mutate(form.values);
    form.reset();
  };

  return (
    <>
      <Head>
        <title>Formateurs</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box sx={{ maxWidth: 300 }} mx="auto">
        Formateurs
        {data?.map((t) => (
          <div key={t.id}>{t.email}</div>
        ))}
        <form onSubmit={form.onSubmit(handleCreate)}>
          <TextInput withAsterisk label="Nom" {...form.getInputProps("name")} />
          <TextInput
            withAsterisk
            label="Email"
            {...form.getInputProps("email")}
          />
          <TextInput
            withAsterisk
            label="Mot de passe"
            type="password"
            {...form.getInputProps("password")}
          />
          <TextInput
            withAsterisk
            type="password"
            label="Confirmation du mot de passe"
            {...form.getInputProps("passwordConfirm")}
          />

          <Group position="right" mt="md">
            <Button type="submit">Inviter</Button>
          </Group>
        </form>
      </Box>
    </>
  );
};

export default Invite;
